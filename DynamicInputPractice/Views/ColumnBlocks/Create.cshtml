@using SharedLibrary.DTOs
@model SharedLibrary.DTOs.ColumnBlockDTO

@{
    ViewData["Title"] = "ToAnswer";
}

<h2>Create</h2>

<h4>ColumnBlockDTO</h4>
<hr/>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" method="post">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control"/>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <table class="table">
                <thead>
                <tr>
                    <th>
                        @Html.DisplayName(nameof(ColumnMetaDTO.Text))
                    </th>
                    <th>
                        @Html.DisplayName(nameof(ColumnMetaDTO.ValueText))
                    </th>
                    <th>
                        @Html.DisplayName(nameof(ColumnMetaDTO.IsRequired))
                    </th>
                </tr>
                </thead>
                <tbody class="columnMetas">
                @for ( var i = 0; i < Model.ColumnDTOs.Count; i++ )
                {
                    <tr>
                        <td>
                            <input asp-for="ColumnDTOs[i].ColumnMetaDTO.Text" class="form-control"/>
                            <span asp-validation-for="ColumnDTOs[i].ColumnMetaDTO.Text" class="text-danger"></span>
                        </td>
                        <td>
                            <input asp-for="ColumnDTOs[i].ColumnMetaDTO.ValueText" class="form-control"/>
                            <span asp-validation-for="ColumnDTOs[i].ColumnMetaDTO.ValueText" class="text-danger"></span>
                        </td>
                        <td>
                            <input asp-for="ColumnDTOs[i].ColumnMetaDTO.IsRequired" class="form-control"/>
                            <span asp-validation-for="ColumnDTOs[i].ColumnMetaDTO.IsRequired" class="text-danger"></span>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
            <div class="form-group">
                <a class="btn btn-default addColumn">
                    <span class="glyphicon glyphicon-plus">&nbsp;Column</span>
                </a>
                <input type="submit" value="Create" class="btn btn-default"/>
                <input type="reset" value="Reset" class="btn btn-danger"/>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    
    <script>

        (function() {
            var columnCount = @(Model.ColumnDTOs.Count);
            $('.addColumn').click(function () {
                console.log('click');
                var html = GetColumnHtmlTemplate();
                $('.columnMetas').append(html);
            });

            function GetColumnHtmlTemplate() {
                var html = '@{  var j = Model.ColumnDTOs.Count-1;  <tr><td><input asp-for="ColumnDTOs[j].ColumnMetaDTO.Text" class="form-control"/> <span asp-validation-for="ColumnDTOs[j].ColumnMetaDTO.Text" class="text-danger"></span> </td> <td> <input asp-for="ColumnDTOs[j].ColumnMetaDTO.ValueText" class="form-control"/> <span asp-validation-for="ColumnDTOs[j].ColumnMetaDTO.ValueText" class="text-danger"></span> </td> <td> <input asp-for="ColumnDTOs[j].ColumnMetaDTO.IsRequired" class="form-control"/> <span asp-validation-for="ColumnDTOs[j].ColumnMetaDTO.IsRequired" class="text-danger"></span></td></tr> }';
                var result = html.replace(/\[0\]/g, '[' + columnCount + ']');
                columnCount ++;
                return result;
            }
        })();
    </script>
}