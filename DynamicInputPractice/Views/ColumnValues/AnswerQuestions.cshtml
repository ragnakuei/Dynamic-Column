@using SharedLibrary.DTOs
@model List<SharedLibrary.DTOs.ColumnBlockDTO>

@{
    ViewData["Title"] = "ReadyToAnswer";
}

<h2>Question Description</h2>

<form asp-action="AnswerQuestions" method="post">
    @Html.AntiForgeryToken()
    <table class="table">
        <thead>
        <tr>
            <th>
                @Html.DisplayName(nameof(ColumnBlockDTO.Name))
            </th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @for ( var i = 0; i < Model.Count(); i++ )
        {
            <tr>
                <td>
                    @Html.HiddenFor(modelItem => Model[i].Id)
                    @Html.DisplayFor(modelItem => Model[i].Name)
                </td>
                <td>
                    <table class="table">
                        <thead>
                        <tr>
                            <th>
                                @Html.DisplayName("Question")
                            </th>
                            <th>
                                @Html.DisplayName("AnswerQuestions")
                            </th>
                        </tr>
                        </thead>
                        <tbody>
                        @if ( Model[i]?.ColumnDTOs?.Count != null )
                        {
                            for ( var j = 0; j < Model[i].ColumnDTOs.Count; j++ )
                            {
                                <tr>
                                    <td>
                                        @Html.HiddenFor(modelItem => Model[i].ColumnDTOs[j].ColumnMetaDTO.Id)
                                        @Html.DisplayFor(modelItem => Model[i].ColumnDTOs[j].ColumnMetaDTO.Text)
                                    </td>
                                    <td>
                                        @{
                                            var isRequired = Model[i].ColumnDTOs[j].ColumnMetaDTO.IsRequired;
                                            var valueOptions = isRequired
                                                                       ? new
                                                                         {
                                                                                 required = isRequired
                                                                         }
                                                                       : new object();
                                        }
                                        @Html.TextBoxFor(modelItem => Model[i].ColumnDTOs[j].Value, valueOptions)
                                        @Html.ValidationMessageFor(modelItem => Model[i].ColumnDTOs[j].Value)
                                    </td>
                                </tr>
                            }
                        }
                        </tbody>
                    </table>
                </td>
            </tr>
        }
        </tbody>
    </table>
    <input type="submit" href="@Url.Action("AnswerQuestions")" class="btn btn-default" value="送出"/>
</form>